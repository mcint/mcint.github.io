<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>just start - Thinking</title><link href="https://mcint.github.io/p/" rel="alternate"></link><link href="https://mcint.github.io/p/feeds/thinking.atom.xml" rel="self"></link><id>https://mcint.github.io/p/</id><updated>2022-09-08T15:58:31-07:00</updated><entry><title>Thinking on tmux configuration - composable vs redefined configs</title><link href="https://mcint.github.io/p/on-tmux.html" rel="alternate"></link><published>2022-09-08T15:58:31-07:00</published><updated>2022-09-08T15:58:31-07:00</updated><author><name>mcint</name></author><id>tag:mcint.github.io,2022-09-08:/p/on-tmux.html</id><summary type="html">&lt;p&gt;Thinking on tmux configuration - composable vs redefined configs&lt;/p&gt;</summary><content type="html">&lt;p&gt;Tools you use every day extend your thinking.  If you build on well-factored
tools, you gain great power.  If you build on convoluted tools, you may one day
find yourself mired in a mess.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tmux&lt;/code&gt; provides a mostly clear set of interface elements and predictable
interactions.  It's often worth configuring to get the best use of it.&lt;/p&gt;
&lt;h2&gt;opinionated .tmux&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/gpakosz/.tmux" rel=nofollow&gt;https://github.com/gpakosz/.tmux&lt;/a&gt;
(hereafter, dot-tmux) offers an opinionated
setup, so opinionated in fact, that you have to learn it's own Domain-Specific
Language (DSL) to manage its configuration of tmux.  As someone who continually
refines my use of tools, I think this approach is wrong.&lt;/p&gt;
&lt;p&gt;Configuration, programming, can be done in a few ways.&lt;/p&gt;
&lt;p&gt;Composition or configuration.&lt;/p&gt;
&lt;p&gt;tmux offers an expressive configuration format, allowing functions and
transformations&lt;/p&gt;
&lt;p&gt;Writing a language over the top of this which allows configuration through new
specially named variables as well as through direct native setting leads to
confusion.  It requires a much deeper understanding of the configuration system
to predict the effect of simple changes.  Without learning a lot more, on par
with some level of rewriting a custom config system, I find myself mired in a
mess.&lt;/p&gt;
&lt;p&gt;The new configuration layer runs some of its changes initially, and some of its
changes after reading in the end-user config file.&lt;/p&gt;
&lt;p&gt;I was tempted by the promise of easily available, powerful configuration
options. However, opinionated choices and an obscurring, verbose DSL in the
configuation layer make otherwise easy changes unpredictable.&lt;/p&gt;
&lt;p&gt;Framework vs library. &lt;/p&gt;
&lt;h3&gt;Exploring justifications&lt;/h3&gt;
&lt;h4&gt;Composition versus configuration.&lt;/h4&gt;
&lt;p&gt;Perhaps I experience that good configuration systems allow expression of a
"composition" of "behaviors" (nouns) of the system.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;do       behavior-1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;don&amp;#39;t-do behavior-2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;"Convention over configuration"&lt;/li&gt;
&lt;li&gt;"Convention over code"&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Framework vs library tmux configuration, raw &lt;code&gt;.tmux.conf&lt;/code&gt;, has the flavor&lt;/h4&gt;
&lt;p&gt;of a library to me. Many options are directly available.&lt;/p&gt;
&lt;p&gt;dot-tmux has the flavor of a framework. It controls how to set most of tmux's
configuration, and clashes with options you can still set directly.&lt;/p&gt;
&lt;p&gt;It seems possible to me that a hypothetical lib-conf-tmux could present an
opinionated set of options, that could be called before manually setting your
own overrides to the chosen opinioned defaults.&lt;/p&gt;</content><category term="Thinking"></category><category term="thinking"></category><category term="dotfiles"></category><category term="cli"></category><category term="tools"></category><category term="tmux"></category><category term="config"></category></entry></feed>