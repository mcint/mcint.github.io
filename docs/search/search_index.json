{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Init MkMcint's Not Jekyll, MNJ's Not Jekyll. What to expect This is a home for writing. Something simple, something started, something published. Writing is a tool for thinking, writing is thinking. Without writing, it's difficult to retrace or recreate thought. I'd like to write regularly, daily, on whatever comes to mind. From reading, from technical play, from social interaction. I want to keep a page of [[topics]] under consideration, in addition to a page, or really tag, about my [[blog methods]].","title":"Init"},{"location":"#init","text":"MkMcint's Not Jekyll, MNJ's Not Jekyll.","title":"Init"},{"location":"#what-to-expect","text":"This is a home for writing. Something simple, something started, something published. Writing is a tool for thinking, writing is thinking. Without writing, it's difficult to retrace or recreate thought. I'd like to write regularly, daily, on whatever comes to mind. From reading, from technical play, from social interaction. I want to keep a page of [[topics]] under consideration, in addition to a page, or really tag, about my [[blog methods]].","title":"What to expect"},{"location":"blog/","text":"Blog I'd like to write regularly, daily, on whatever comes to mind. From reading, from technical play, from social interaction. I want to keep a page of [[topics]] under consideration, in addition to a page, or really tag, about my [[blog methods]].","title":"Blog"},{"location":"blog/#blog","text":"I'd like to write regularly, daily, on whatever comes to mind. From reading, from technical play, from social interaction. I want to keep a page of [[topics]] under consideration, in addition to a page, or really tag, about my [[blog methods]].","title":"Blog"},{"location":"blog/methods/","text":"Methods I tried pelican on github pages. I have too much past frustration with jekyll to want to set up ruby and gems again locally just to publish a static site. I would rather first write my own bash and make site generator. This site I'm using MkDocs, locally running it with poetry run mkdocs serve . I edit (and preview) on personal computer with github keys, and push to github for publishing to Pages. Ideal workflow Easy writing and deployment. MkDocs's serve, with a jupyter notebook to writing updates. Maybe autocommitting, but publish as I write, and close access to powerful tools like the python ecosystem. Building it further I should make this a checklist, or a table for comparisons. A table would be nice, I can even list the strength of each framework in its own terms and consider the cartesian product of qualities I've loved with solutions on offer. Frustrations, observations Taking inspiration from NVC (Non-Violent Communication), I'm seeking 1) Observations, to uncover 2) Feelings, to assess 3) Needs, to arrive at 4) Requests for the tools and workflows I'll choose to use (OFNR). Site generators jekyll ruby, gem. installation, upgrades, slow painful compile to get the tool, sudo for text processing. mkdocs TOC header levels. 1# expected as page title, and for upper out of 2-level header visibility. 3rd level hidden. 4-indent for nested lists (not just 2, or 1). Possibly configurable, check mkdocs.yml docs. nice if: headers, in-page, had static fragment links. Only TOC renders them. Hosting provider Github Pages + good uptime - slow to deploy - requires trusted computer, github keys, git add-commit-push process. Self-host + faster iteration. preview while editing. live site, or dev site - uptime, risk of downtime. site longevity. domain. makes me want to build a site that can output to run on gh-pages, but that I edit primarily on personal site. under consideration.","title":"Methods"},{"location":"blog/methods/#methods","text":"I tried pelican on github pages. I have too much past frustration with jekyll to want to set up ruby and gems again locally just to publish a static site. I would rather first write my own bash and make site generator.","title":"Methods"},{"location":"blog/methods/#this-site","text":"I'm using MkDocs, locally running it with poetry run mkdocs serve . I edit (and preview) on personal computer with github keys, and push to github for publishing to Pages.","title":"This site"},{"location":"blog/methods/#ideal-workflow","text":"Easy writing and deployment. MkDocs's serve, with a jupyter notebook to writing updates. Maybe autocommitting, but publish as I write, and close access to powerful tools like the python ecosystem.","title":"Ideal workflow"},{"location":"blog/methods/#building-it-further","text":"I should make this a checklist, or a table for comparisons. A table would be nice, I can even list the strength of each framework in its own terms and consider the cartesian product of qualities I've loved with solutions on offer.","title":"Building it further"},{"location":"blog/methods/#frustrations-observations","text":"Taking inspiration from NVC (Non-Violent Communication), I'm seeking 1) Observations, to uncover 2) Feelings, to assess 3) Needs, to arrive at 4) Requests for the tools and workflows I'll choose to use (OFNR).","title":"Frustrations, observations"},{"location":"blog/methods/#site-generators","text":"jekyll ruby, gem. installation, upgrades, slow painful compile to get the tool, sudo for text processing. mkdocs TOC header levels. 1# expected as page title, and for upper out of 2-level header visibility. 3rd level hidden. 4-indent for nested lists (not just 2, or 1). Possibly configurable, check mkdocs.yml docs. nice if: headers, in-page, had static fragment links. Only TOC renders them.","title":"Site generators"},{"location":"blog/methods/#hosting-provider","text":"Github Pages + good uptime - slow to deploy - requires trusted computer, github keys, git add-commit-push process. Self-host + faster iteration. preview while editing. live site, or dev site - uptime, risk of downtime. site longevity. domain. makes me want to build a site that can output to run on gh-pages, but that I edit primarily on personal site. under consideration.","title":"Hosting provider"},{"location":"blog/topics/","text":"Topics On blogging Writing is thinking. Sources, what's worth building on. Clarity of thought. On small projects YouTube transcript, searching. Download, index. Extracting actionable insight from bulk data. Helping advice, freely shared, arrive at the right time--when the student is ready. reduct.video, could use. Or take inspiration from. nlp assistants AVclub, music demos & projects ML, style. Generation. Recognition. MIDI extract? Style ...transfer? resume / CV work, projects sought dotfiles, utils, as .sh/ tar.sh / sqlar.sh EA / rationalist ideas, engagement ML infra. tinyprojects, base compute. minimal base. alternative ML/AI approaches. room to apply ML to previous AI conceptions. room to use tougher AI tests to condition ML On making money, adding value A question of goals in life, timelines, desired outcomes.","title":"Topics"},{"location":"blog/topics/#topics","text":"","title":"Topics"},{"location":"blog/topics/#on-blogging","text":"Writing is thinking. Sources, what's worth building on. Clarity of thought.","title":"On blogging"},{"location":"blog/topics/#on-small-projects","text":"YouTube transcript, searching. Download, index. Extracting actionable insight from bulk data. Helping advice, freely shared, arrive at the right time--when the student is ready. reduct.video, could use. Or take inspiration from. nlp assistants AVclub, music demos & projects ML, style. Generation. Recognition. MIDI extract? Style ...transfer? resume / CV work, projects sought dotfiles, utils, as .sh/ tar.sh / sqlar.sh EA / rationalist ideas, engagement ML infra. tinyprojects, base compute. minimal base. alternative ML/AI approaches. room to apply ML to previous AI conceptions. room to use tougher AI tests to condition ML","title":"On small projects"},{"location":"blog/topics/#on-making-money-adding-value","text":"A question of goals in life, timelines, desired outcomes.","title":"On making money, adding value"},{"location":"me/howto/","text":"How To Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"How To"},{"location":"me/howto/#how-to","text":"","title":"How To"},{"location":"me/howto/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"me/howto/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"me/howto/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"}]}